<launch>
    <!-- This was our main launch file. We based it of a launch file we found in the Allegro 
    hand library, and we changed the default parameters to fit our hand. It launches a tf publisher
    and launches the hand using our custom "torque" controller -->

  

  <arg name="HAND" default="right"/>
  <arg name="NUM" default="0"/>
  <arg name="GAZEBO" default="false"/>
  <arg name="JSP_GUI" default="false"/>
  <arg name ="VISUALIZE" default="false" />

 

  <!-- Sets the controller to our custom "torque" controller, we should read This
  and or potentially re write it a bit or even make our own controller? -->
  <arg name="CONTROLLER" default="torque"/> 


  <arg name="POLLING" default="true"/> <!-- true, false for polling the CAN communication -->

  <!-- ls -l /dev/pcan* to see your open CAN ports. Auto means find it
      automatically, and ignores the CAN_DEVICE argument. -->
  <arg name="AUTO_CAN" default="true" />
  <arg name="CAN_DEVICE" default="/dev/pcanusb1" />

  <arg name="PARAMS_DIR" default="$(find allegro_hand_parameters)" />
  <arg name="KEYBOARD" default="true" />

  <!-- yaml param files for your hand can be found in parameters/zero_files/ -->
  <arg name="ZEROS" default="$(arg PARAMS_DIR)/zero.yaml"/>

  <!--If true, respawn the controller if it dies. -->
  <arg name="RESPAWN" default="false"/>


  <!-- Load the urdf for the hand -->
  <param name="robot_description_hand"
      command="$(find xacro)/xacro
              $(find allegro_hand_description)/allegro_hand_description_$(arg HAND).xacro"/>
  

  <!-- These lines create a custom URDF file from the Xacro file that we created, 
  it then sets a new rosparam: robot_description_with_hand to the URDF. When we
  lauch Rviz we can set the robot description to this paramter to get the complete
  visualisation of the sawyer and the hand with all the tf data. -->

  <param name="robot_description_with_hand"
          command="$(find xacro)/xacro --inorder 
                    $(find group_work)/src/my_robot.xacro"/> 


  <!-- These lines publish static transforms to link the Sawyer to the hand, this allows TF to maintain a 
  continuous tree of transforms. -->
  <node pkg="tf" type="static_transform_publisher" name="sawyer_to_mount_broadcaster" args="0 0 0 0 0 0 1 right_hand mount 100" />
  <node pkg="tf" type="static_transform_publisher" name="mount_to_hand_broadcaster" args="0 0 0.13 0 0 0 1 mount palm_link 100" />


  <!-- Now the parameters are mapped to a controller and it is launched -->
  <node name="allegroHand_$(arg HAND)_$(arg NUM)"
        pkg="allegro_hand_controllers"
        type="allegro_node_$(arg CONTROLLER)"
        output="screen"
        clear_params="true"
        respawn="$(arg RESPAWN)"
        respawn_delay="2"
        args="$(arg POLLING)" >


  
  <!-- 
  Sets the topics of the allegro hand, incase we ever expanded to 2 hands, 
  it keeps all the topic names separate. -->

    <remap from="allegroHand/joint_states" to="allegroHand_$(arg NUM)/joint_states"/>
    <remap from="allegroHand/joint_cmd" to="allegroHand_$(arg NUM)/joint_cmd"/>
    <remap from="allegroHand/lib_cmd" to="allegroHand_$(arg NUM)/lib_cmd"/>
    <remap from="allegroHand/torque_cmd" to="allegroHand_$(arg NUM)/torque_cmd"/>
    <remap from="allegroHand/envelop_torque" to="allegroHand_$(arg NUM)/envelop_torque"/>
    <remap from="allegroHand/joint_current_states" to="allegroHand_$(arg NUM)/joint_current_states"/>
    <remap from="allegroHand/joint_desired_states" to="allegroHand_$(arg NUM)/joint_desired_states"/>


    <!-- Load in some more ros parameters -->
    <rosparam file="$(arg ZEROS)" command="load" />
    <rosparam file="$(arg PARAMS_DIR)/gains_pd.yaml" command="load" />
    <rosparam file="$(arg PARAMS_DIR)/gains_velSat.yaml" command="load" />
    <rosparam file="$(arg PARAMS_DIR)/initial_position.yaml" command="load" />
    <param name="/comm/CAN_CH" value="$(arg CAN_DEVICE)"
              unless="$(arg AUTO_CAN)" />
    <param name="/comm/CAN_CH"
            command="$(find allegro_hand_description)/scripts/detect_pcan.py"
            if="$(arg AUTO_CAN)" />

    <param name="/hand_info/which_hand" value="$(arg HAND)" /> <!-- See HAND arg above -->

  </node>

  

  <!-- launches the tf data node, and remaps the names so the hand's tf topics don't overlap with Sawyer-->
  <node name="jointState2tf_$(arg NUM)"
        pkg="robot_state_publisher"
        output="screen" 
        type="robot_state_publisher">
    <!-- <remap from="tf" to="allegroHand_$(arg NUM)/tf"/> -->
    <remap from="joint_states" to="allegroHand_$(arg NUM)/joint_states"/>
  </node>

  <!-- This is incase we ever need to go back to controlling the hand with the keyboard -->
  <node name="keyboard_$(arg NUM)"
        pkg="allegro_hand_keyboard"
        type="allegro_hand_keyboard"
        output="screen"
        if="$(arg KEYBOARD)">
    <remap from="allegroHand/lib_cmd" to="allegroHand_$(arg NUM)/lib_cmd"/>
  </node>


</launch>